!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t),n.d(t,"renTable",(function(){return r}));var r=function(e){var t=document.createElement("table"),n=document.createElement("tr");t.insertAdjacentElement("beforeend",n),n.insertAdjacentHTML("beforeend","<th>FirstName</th>"),n.insertAdjacentHTML("beforeend","<th>Location</th>");for(var r=0,o=e;r<o.length;r++){var a=o[r],i=document.createElement("tr");i.insertAdjacentHTML("beforeend","<td>"+a.firstName+"</td>"),i.insertAdjacentHTML("beforeend","<td>"+a.location+"</td>"),t.insertAdjacentElement("beforeend",i)}document.body.insertAdjacentElement("beforeend",t)};r([{firstName:"Ademola",lastName:"Olaoye",age:40,location:"Lagos"},{firstName:"Victoria",lastName:"Laniya",age:35,location:"Ibadan"}])}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,